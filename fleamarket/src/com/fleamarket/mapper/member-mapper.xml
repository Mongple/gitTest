<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC  
 "-//mybatis.org//DTD Mapper 3.0//EN"  
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">
	<resultMap type="com.fleamarket.vo.MemberVO" id="memberMap">
		<id column="MEM_NO" property="memNo"/>
		<result column="MEM_ID" property="memId"/>
		<result column="MEM_PWD" property="memPwd"/>
		<result column="MEM_NAME" property="memName"/>
		<result column="MEM_BIRTH" property="memBirth"/>
		<result column="MEM_DATE" property="memDate"/>
		<result column="MEM_PHONE" property="memPhone"/>
		<result column="MEM_EMAIL" property="memEmail"/>
		<result column="MEM_GRANT" property="memGrant"/>
		<result column="MEM_BLACK" property="memBlack"/>
	</resultMap>
	
	<select id="selectMemberChk" parameterType="com.fleamarket.vo.MemberVO" resultMap="memberMap">
		SELECT MEM_NO, MEM_ID, MEM_NAME, MEM_BIRTH, MEM_DATE, MEM_PHONE, MEM_EMAIL, MEM_GRANT, MEM_BLACK
		FROM MEMBER
		WHERE MEM_ID= #{memId}
		AND DECODE(MEM_PWD, NULL, MEM_PWD ,CRYPTPACK.DECRYPT(MEM_PWD, #{memId})) = #{memPwd}
	</select>
	
	<select id="selectMemberInfo" parameterType="com.fleamarket.vo.MemberVO" resultMap="memberMap">
		SELECT MEM_NO, MEM_ID, MEM_NAME, MEM_BIRTH, MEM_DATE, MEM_PHONE, MEM_EMAIL, MEM_GRANT, MEM_BLACK
		FROM MEMBER
		<choose>
			<when test="memId == null">
				WHERE MEM_EMAIL= #{memEmail}
			</when>
			<otherwise>
				WHERE MEM_ID= #{memId}
			</otherwise>
		</choose>
	</select>
	
	<insert id="insertMember" parameterType="com.fleamarket.vo.MemberVO">
		INSERT INTO MEMBER(MEM_NO, MEM_ID, MEM_PWD, MEM_NAME, MEM_BIRTH, MEM_DATE
            				, MEM_PHONE, MEM_EMAIL, MEM_GRANT, MEM_BLACK)
		VALUES((SELECT NVL(MAX(MEM_NO),0)+1 FROM MEMBER)
				, #{memId}, CRYPTPACK.ENCRYPT(#{memPwd},#{memId}), #{memName}, #{memBirth}
				, sysdate, #{memPhone}, #{memEmail}, 'U', 0)
	</insert>
	
	<select id="idCheck" parameterType="com.fleamarket.vo.MemberVO" resultMap="memberMap">
		SELECT MEM_NO, MEM_ID, MEM_NAME, MEM_BIRTH, MEM_DATE, MEM_PHONE, MEM_EMAIL, MEM_GRANT, MEM_BLACK
		FROM MEMBER
		WHERE MEM_ID= #{memId}
	</select>
	
	<select id="selectMyBoardList" parameterType="com.fleamarket.vo.BoardVO" resultType="com.fleamarket.vo.BoardVO">
		SELECT 
		  b.BA_NO baNo,
		  (select mem_id from member where mem_no = b.mem_no) memId,
		  b.BA_TYPE baType,
		  b.BA_TITLE baTitle,
		  b.BA_DATE baDate
		FROM board b
		WHERE MEM_NO = (select mem_no from member where MEM_ID = #{memId})
		<choose>
	     	<when test="baType.equals('PRODUCT')">
	     		AND (b.ba_type='PRODUCT' OR b.ba_type IS NULL)
	     	</when>
	     	<when test="baType.equals('WEAR')">
	     		AND (b.ba_type='WEAR' OR b.ba_type IS NULL)
	     	</when>
		</choose>
		<choose>
			<when test="searchType!=null and searchType.equals('SEARCHALL')">
	     		 AND (b.BA_TITLE LIKE '%${searchData}%' OR b.BA_CONTENT LIKE '%${searchData}%')
	     	</when>
	     	<when test="searchType!=null and searchType.equals('SEARCHTITLE')">
	     		 AND b.BA_TITLE LIKE '%${searchData}%'
	     	</when>
	     	<when test="searchType!=null and searchType.equals('SEARCHCONTENT')">
	     		 AND b.BA_CONTENT LIKE '%${searchData}%'
	     	</when>
		</choose>
		ORDER BY baNo DESC
	</select>
	
	<select id="selectMyBoardCnt" parameterType="com.fleamarket.vo.BoardVO" resultType="int">
		SELECT 
		  COUNT(1)
		FROM board b
		WHERE MEM_NO = (select mem_no from member where MEM_ID = #{memId})
		<choose>
	     	<when test="baType.equals('PRODUCT')">
	     		AND (b.ba_type='PRODUCT' OR b.ba_type IS NULL)
	     	</when>
	     	<when test="baType.equals('WEAR')">
	     		AND (b.ba_type='WEAR' OR b.ba_type IS NULL)
	     	</when>
		</choose>
		<choose>
			<when test="searchType!=null and searchType.equals('SEARCHALL')">
	     		 AND (b.BA_TITLE LIKE '%${searchData}%' OR b.BA_CONTENT LIKE '%${searchData}%')
	     	</when>
	     	<when test="searchType!=null and searchType.equals('SEARCHTITLE')">
	     		 AND b.BA_TITLE LIKE '%${searchData}%'
	     	</when>
	     	<when test="searchType!=null and searchType.equals('SEARCHCONTENT')">
	     		 AND b.BA_CONTENT LIKE '%${searchData}%'
	     	</when>
		</choose>
	</select>
	
	<update id="updateMember" parameterType="com.fleamarket.vo.MemberVO">
		UPDATE MEMBER
		<set>
			<if test="memName != null">
				MEM_NAME = #{memName},
			</if>
			<if test="memPwd != null">
				MEM_PWD = CRYPTPACK.ENCRYPT(#{memPwd},#{memId}),
			</if>
			<if test="memEmail != null">
				MEM_EMAIL = #{memEmail},
			</if>
			<if test="memPhone != null">
				MEM_PHONE = #{memPhone}
			</if>
		</set>
		WHERE MEM_ID = #{memId}
	</update>
	
	<insert id="insertB_Member" parameterType="com.fleamarket.vo.MemberVO">
		INSERT INTO 
		BMEMBER
			(
				BMEM_NO, 
				BMEM_ID, 
				BMEM_PWD, 
				BMEM_NAME, 
				BMEM_BIRTH, 
				BMEM_PHONE, 
				BMEM_EMAIL, 
				BMEM_OUT)
		VALUES
			(
				(SELECT NVL(MAX(BMEM_NO),0)+1 FROM BMEMBER),
				#{memId}, 
				CRYPTPACK.ENCRYPT(123,#{memId}), 
				#{memName}, 
				#{memBirth},
				#{memPhone}, 
				#{memEmail}, 
				SYSDATE
			)
	</insert>
	
	<update id="deleteMember" parameterType="com.fleamarket.vo.MemberVO">
		UPDATE MEMBER
		SET
			MEM_NAME = NULL,
			MEM_PWD = NULL,
			MEM_EMAIL = NULL,
			MEM_PHONE = NULL,
			MEM_BIRTH = NULL
		WHERE MEM_ID = #{memId}
	</update>
	
	<update id="updatePwd" parameterType="com.fleamarket.vo.MemberVO">
		UPDATE MEMBER
		SET
			MEM_PWD = CRYPTPACK.ENCRYPT(#{memPwd},#{memId})
		WHERE MEM_ID = #{memId}
	</update>
</mapper>