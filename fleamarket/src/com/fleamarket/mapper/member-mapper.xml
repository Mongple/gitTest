<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC  
 "-//mybatis.org//DTD Mapper 3.0//EN"  
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">
	<resultMap type="com.fleamarket.vo.MemberVO" id="memberMap">
		<id column="MEM_NO" property="memNo"/>
		<result column="MEM_ID" property="memId"/>
		<result column="MEM_PWD" property="memPwd"/>
		<result column="MEM_NAME" property="memName"/>
		<result column="MEM_BIRTH" property="memBirth"/>
		<result column="MEM_DATE" property="memDate"/>
		<result column="MEM_PHONE" property="memPhone"/>
		<result column="MEM_EMAIL" property="memEmail"/>
		<result column="MEM_GRANT" property="memGrant"/>
		<result column="MEM_BLACK" property="memBlack"/>
	</resultMap>
	
	<select id="selectMemberInfo" parameterType="com.fleamarket.vo.MemberVO" resultMap="memberMap">
		SELECT MEM_NO, MEM_ID, MEM_NAME, MEM_BIRTH, MEM_DATE, MEM_PHONE, MEM_EMAIL, MEM_GRANT, MEM_BLACK
		FROM MEMBER
		WHERE MEM_ID= #{memId}
		AND CRYPTPACK.DECRYPT(MEM_PWD, #{memId}) = #{memPwd}
	</select>
	
	<insert id="insertMember" parameterType="com.fleamarket.vo.MemberVO">
		INSERT INTO MEMBER(MEM_NO, MEM_ID, MEM_PWD, MEM_NAME, MEM_BIRTH, MEM_DATE
            				, MEM_PHONE, MEM_EMAIL, MEM_GRANT, MEM_BLACK)
		VALUES((SELECT NVL(MAX(MEM_NO),0)+1 FROM MEMBER)
				, #{memId}, CRYPTPACK.ENCRYPT(#{memPwd},#{memId}), #{memName}, #{memBirth}
				, sysdate, #{memPhone}, #{memEmail}, 'U', 0)
	</insert>
	
	<select id="idCheck" parameterType="com.fleamarket.vo.MemberVO" resultMap="memberMap">
		SELECT MEM_NO, MEM_ID, MEM_NAME, MEM_BIRTH, MEM_DATE, MEM_PHONE, MEM_EMAIL, MEM_GRANT, MEM_BLACK
		FROM MEMBER
		WHERE MEM_ID= #{memId}
	</select>
	
	<select id="selectMyBoardList" parameterType="com.fleamarket.vo.BoardVO" resultType="com.fleamarket.vo.BoardVO">

		SELECT 
		    DISTINCT(baNo), baType, memId, baTitle, baDate, baCount
		FROM 
		    (
		      SELECT 
		            NVL(b.ba_no, (SELECT b2.ba_no FROM board b2 WHERE r.ba_no = b2.ba_no)) baNo,
		            NVL(b.ba_type,(SELECT b2.ba_type FROM board b2 WHERE r.ba_no = b2.ba_no)) baType,
		            NVL((SELECT mem_id FROM MEMBER WHERE mem_no = 4), (SELECT m2.mem_id FROM MEMBER m2, board b2 WHERE m2.mem_no = b2.mem_no AND b2.ba_no = (SELECT b2.ba_no FROM board b2 WHERE r.ba_no = b2.ba_no))) memId,
				    NVL(b.ba_title, (SELECT b2.ba_title FROM board b2 WHERE r.ba_no = b2.ba_no)) baTitle,
				    NVL(b.ba_date,TO_DATE((SELECT b2.ba_date FROM board b2 WHERE r.ba_no = b2.ba_no), 'yyyy-mm-dd hh24:mi')) baDate,
		            NVL(b.ba_count,(SELECT b2.ba_count FROM board b2 WHERE r.ba_no = b2.ba_no)) baCount
		      FROM REPLY R FULL OUTER JOIN BOARD B
		      ON R.MEM_NO = B.MEM_NO
		      WHERE R.MEM_NO = (SELECT MEM_NO FROM MEMBER WHERE MEM_ID =#{memId})
		      <choose>
		      	<when test='#{memId} == "PRODUCT"'>
		      		AND (b.ba_type='PRODUCT' OR b.ba_type IS NULL)
		      	</when>
		      	<otherwise>
		      		AND (b.ba_type='WEAR' OR b.ba_type IS NULL)
		      	</otherwise>
		      </choose>
		      OR R.BA_NO=B.BA_NO
		      ORDER BY B.BA_NO
		    )
		    ORDER BY baNo DESC
	</select>
</mapper>